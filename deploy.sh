#!/bin/sh

# L·∫•y danh s√°ch tag, l·ªçc ƒë√∫ng ƒë·ªãnh d·∫°ng version (X.Y.Z), s·∫Øp x·∫øp theo th·ª© t·ª± phi√™n b·∫£n th·ª±c s·ª±
LATEST_GIT_VERSION=$(git tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1)

# N·∫øu kh√¥ng c√≥ tag n√†o, g√°n m·∫∑c ƒë·ªãnh l√† 0.0.0
if [ -z "$LATEST_GIT_VERSION" ]; then
  LATEST_GIT_VERSION="0.0.0"
fi

echo "üîç Latest version detected: $LATEST_GIT_VERSION"

# T√°ch c√°c ph·∫ßn c·ªßa phi√™n b·∫£n (X.Y.Z)
IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_GIT_VERSION"

# TƒÉng phi√™n b·∫£n PATCH
PATCH=$((PATCH + 1))

# T·∫°o phi√™n b·∫£n m·ªõi
NEW_VERSION="$MAJOR.$MINOR.$PATCH"

# Ki·ªÉm tra n·∫øu tag ƒë√£ t·ªìn t·∫°i
if git tag | grep -q "^$NEW_VERSION$"; then
  echo "‚ö†Ô∏è Version $NEW_VERSION already exists. Skipping tag creation."
  exit 1
fi

# T·∫°o tag m·ªõi
git tag -a "$NEW_VERSION" -m "Release $NEW_VERSION"

# Push tag l√™n remote
git push origin "$NEW_VERSION"

echo "‚úÖ Deployment completed with version $NEW_VERSION"
